{"version":3,"sources":["Components/Navbar/Navbar.js","API/SpaceXAPI.js","Components/Content/MainContent/MainContentLaunch.js","Components/Content/MainContent/MainContent.js","Components/Content/LauchContent/LaunchContent.js","Components/Content/TweetContent/TweetContent.js","Components/Content/Content.js","Components/RightNav/RightNav.js","Components/Footer/Footer.js","App.js","Reducers/SpaceXAPIReducers.js","store.js","Actions/AllActionsType.js","index.js"],"names":["Navbar","className","url","urlLaunch","concat","urlLaunchPast","urlLaunchUpcoming","urlLaunchLatest","urlLaunchNext","fetchSpaceXLaunch","timeline","a","newLaunchURL","axios","get","data","launchData","id","links","static_fire_date_utc","rocket","success","failures","crew","ships","capsules","payloads","launchpad","flight_number","name","date_utc","details","cores","console","log","MainContentLaunch","useState","launchInfo","setLauchInfo","useEffect","fetchAPILaunch","MainContent","LaunchContent","TweetContent","Content","RightNav","Footer","App","React","Component","selectorInitialState","allReducers","SpaceX_API_reducer","state","action","type","payload","reduceTodo","persistConfig","key","storage","stateReconciler","autoMergeLevel2","rootReducer","combineReducers","rootPersistReducer","persistReducer","configureStore","createStore","composeWithDevTools","applyMiddleware","thunk","indexStore","indexPersistor","persistStore","ReactDOM","render","StrictMode","store","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.e67cf768.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../../Styles/Navbar.css\";\r\n\r\nexport const Navbar=()=>{\r\n    return(\r\n        <div className=\"nav-bar\">\r\n\r\n        </div>\r\n    )\r\n} ","import axios from 'axios';\r\n//base URL\r\nconst url = 'https://api.spacexdata.com/v4';\r\n\r\n//lauch\r\nconst urlLaunch=url.concat('/launches');\r\nconst urlLaunchPast=urlLaunch.concat('/past');\r\nconst urlLaunchUpcoming=urlLaunch.concat('/upcoming');\r\nconst urlLaunchLatest=urlLaunch.concat('/latest');\r\nconst urlLaunchNext=urlLaunch.concat('/next');\r\n\r\n//launchpad\r\nconst urlLaunchPads=url.concat('/launchpads');\r\n\r\n//payload\r\nconst urlPayloads=url.concat('/payloads');\r\n\r\n//rocket\r\nconst urlRockets=url.concat('./rockets');\r\n\r\n//ship\r\nconst urlShips=url.concat('/ships');\r\n\r\n//capsules\r\nconst urlCapsules=url.concat('/capsules');\r\n\r\n\r\nexport const fetchSpaceXLaunch=async(timeline)=>{\r\n    let newLaunchURL=urlLaunch;\r\n    if(timeline===\"past\") newLaunchURL=urlLaunchPast;\r\n    else if(timeline===\"upcoming\") newLaunchURL=urlLaunchUpcoming;\r\n    else if(timeline===\"latest\") newLaunchURL=urlLaunchLatest;\r\n    else if(timeline===\"next\") newLaunchURL=urlLaunchNext;\r\n    else if(timeline) newLaunchURL.concat('/'+timeline);\r\n    try{\r\n        //props must name data to work(even props doesnt work). possibly a await or get() thing\r\n        const{data}=await axios.get(newLaunchURL);\r\n        const launchData={\r\n            id:data.id,\r\n            links:data.links,\r\n            static_fire_date_utc:data.static_fire_date_utc,\r\n            rocket:data.rocket,\r\n            success:data.success,\r\n            failures:data.failures,\r\n            crew:data.crew,\r\n            ships:data.ships,\r\n            capsules:data.capsules,\r\n            payloads:data.payloads,\r\n            launchpad:data.launchpad,\r\n            flight_number:data.flight_number,\r\n            name:data.name,\r\n            date_utc:data.date_utc,\r\n            details:data.details,\r\n            cores:data.cores\r\n        };\r\n        return launchData;\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const fetchSpaceXLaunchPad=async(launchpad)=>{\r\n    let newLaunchpadURL=urlLaunchPads;\r\n    if(launchpad) newLaunchpadURL.concat('/'+urlLaunchPads);\r\n    try{\r\n        //const{data}=await axios.get(newLaunchpadURL);\r\n        const launchpadData={\r\n            //fill info here\r\n        };\r\n        return launchpadData;\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const fetchSpaceXPayload=async(payload)=>{\r\n    let newPayloadURL=urlPayloads;\r\n    if(payload) newPayloadURL.concat('/'+urlPayloads);\r\n    try{\r\n        //const{data}=await axios.get(newPayloadURL);\r\n        const payloadData={\r\n            //fill info here\r\n        };\r\n        return payloadData;\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const fetchSpaceXRocket=async(rocket)=>{\r\n    let newRocketURL=urlRockets;\r\n    if(rocket) newRocketURL.concat('/'+urlRockets);\r\n    try{\r\n        //const{data}=await axios.get(newRocketURL);\r\n        const rocketData={\r\n            //fill info here\r\n        };\r\n        return rocketData;\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const fetchSpaceXShip=async(ship)=>{\r\n    let newShipURL=urlShips;\r\n    if(ship) newShipURL.concat('/'+urlShips);\r\n    try{\r\n        //const{data}=await axios.get(newShipURL);\r\n        const shipData={\r\n            //fill info here\r\n        };\r\n        return shipData;\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\nexport const fetchSpaceXCapsules=async(capsule)=>{\r\n    let newCapsulesURL=urlCapsules;\r\n    if(capsule) newCapsulesURL.concat('/'+urlCapsules);\r\n    try{\r\n       // const{data}=await axios.get(newCapsulesURL);\r\n        const capsuleData={\r\n            //fill info here\r\n        };\r\n        return capsuleData;\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n}\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\n\r\nimport {fetchSpaceXLaunch} from \"../../../API/SpaceXAPI\";\r\nimport \"../../../Styles/Content.css\";\r\nimport \"../../../Styles/MainContent.css\";\r\n\r\nexport const MainContentLaunch=()=>{\r\n    const [launchInfo, setLauchInfo]=useState([]);\r\n   // let timeline=\"latest\";\r\n\r\n    //useEffect(async()=>{}) doesnt exist\r\n    //if no second argument, useEffect is going to run endlessly\r\n    //if argument provide, only run when second argument change\r\n    useEffect(()=>{\r\n        const fetchAPILaunch=async()=>{\r\n            //return of async function is a promise, not object or anything\r\n            //dont forget the () at await\r\n            //have to substitute latest with timeline later\r\n            setLauchInfo(await fetchSpaceXLaunch(\"latest\"));\r\n        };\r\n        \r\n        fetchAPILaunch();\r\n    },[setLauchInfo]);\r\n    console.log(\"launch data \"+launchInfo.details);\r\n    return(\r\n        <div className=\"main-content-lanuch\">\r\n        </div>\r\n    )\r\n} ","import React from \"react\";\r\n\r\nimport {MainContentLaunch} from \"./MainContentLaunch\";\r\n\r\nimport \"../../../Styles/Content.css\";\r\nimport \"../../../Styles/MainContent.css\";\r\n\r\nexport const MainContent=()=>{\r\n    return(\r\n        <div className=\"main-content\">\r\n            <MainContentLaunch/>\r\n            <div className=\"main-content-weather\"></div>\r\n            <div className=\"main-content-geo\"></div>\r\n            <div className=\"main-content-news\"></div>\r\n            <div className=\"main-content-stock\"></div>\r\n            <div className=\"main-content-tweet\"></div>\r\n            <div className=\"main-content-vid\"></div>\r\n            <div className=\"main-content-job\"></div>\r\n            <div className=\"main-content-quiz\"></div>\r\n            <div className=\"main-content-poll\"></div>\r\n\r\n        </div>\r\n    )\r\n} ","import React from \"react\";\r\nimport \"../../../Styles/Content.css\";\r\n\r\nexport const LaunchContent=()=>{\r\n    return(\r\n        <div className=\"launch-content\">\r\n\r\n        </div>\r\n    )\r\n} ","import React from \"react\";\r\nimport \"../../../Styles/Content.css\";\r\n\r\nexport const TweetContent=()=>{\r\n    return(\r\n        <div className=\"tweet-content\">\r\n\r\n        </div>\r\n    )\r\n} ","import React from \"react\";\r\nimport \"../../Styles/Content.css\";\r\nimport { MainContent } from \"./MainContent/MainContent\";\r\nimport { LaunchContent } from \"./LauchContent/LaunchContent\";\r\nimport { TweetContent } from \"./TweetContent/TweetContent\";\r\n/*import {WeatherContent} from \"./WeatherContent/WeatherContent\";\r\nimport {GeoContent} from \"./GeoContent/GeoContent\";\r\nimport {StockContent} from \"./StockContent/StockContent\";\r\nimport {NewsContent} from \"./NewsContent/NewsContent\";\r\nimport {VideoContent} from \"./VideoContent/VideoContent\";\r\nimport {JobContent} from \"./JobContent/JobContent\";\r\nimport {QuizContent} from \"./QuizContent/QuizContent\";\r\nimport {PollContent} from \"./PollContent/PollContent\";*/\r\n\r\nexport const Content = () => {\r\n    return (\r\n        <div className=\"content\">\r\n            <MainContent />\r\n            <LaunchContent />\r\n            <TweetContent />\r\n            {/*<WeatherContent/> \r\n            <GeoContent/> \r\n            <StockContent/> \r\n            <NewsContent/> \r\n            <VideoContent/> \r\n            <JobContent/> \r\n            <QuizContent/> \r\n            <PollContent/>*/}\r\n        </div>\r\n    )\r\n} ","import React from \"react\";\r\nimport \"../../Styles/RightNav.css\";\r\n\r\nexport const RightNav=()=>{\r\n    return(\r\n        <div className=\"right-nav\">\r\n\r\n        </div>\r\n    )\r\n} ","import React from \"react\";\r\nimport \"../../Styles/Footer.css\";\r\n\r\n//this is ok since html5 syntax is lowercase\r\nexport const Footer=()=>{\r\n    return(\r\n        <div className=\"footer\">\r\n\r\n        </div>\r\n    )\r\n} ","import React from 'react';\nimport {Navbar} from \"./Components/Navbar/Navbar\";\nimport {Content} from \"./Components/Content/Content\";\nimport {RightNav} from \"./Components/RightNav/RightNav\";\nimport {Footer} from \"./Components/Footer/Footer\";\nimport \"./Styles/App.css\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"app\">\n        <Navbar/>\n        <Content/>\n        <RightNav/>\n        <Footer/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import {Display_SpaceX_API_All_Launches} from \"../Actions/AllActionsType\";\r\n\r\n//this will be necessary when need some more loading\r\nconst selectorInitialState=[];\r\n\r\nexport const SpaceX_API_reducer= (state =selectorInitialState, action)=>{\r\n    const {type, payload }=action;\r\n\r\n    switch(type){\r\n        case Display_SpaceX_API_All_Launches:{\r\n            const {reduceTodo}=payload;\r\n            return state.concat(reduceTodo);\r\n        }\r\n        default: return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport {SpaceX_API_reducer} from './Reducers/SpaceXAPIReducers';\r\nimport {persistReducer} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport thunk from 'redux-thunk';\r\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\r\nimport {composeWithDevTools} from 'redux-devtools-extension';\r\n\r\n\r\n//naming of this file is due to the redux naming convention\r\n//a constant to hold ALL the reducers that will be defined later on\r\nconst allReducers ={ SpaceX_API_reducer };\r\n\r\n//autoMergeLevel2 tell Redux Persist how to reconcile the initial and stored state of application,\r\n//as in how deep it should go (level 2)\r\nconst persistConfig={\r\n    key: 'root',\r\n    storage,\r\n    stateReconciler: autoMergeLevel2,\r\n}\r\n\r\n//put all reducers to a form that can be used to pass to createStore\r\n//this is because we will use many reducers for different API\r\n\r\nconst rootReducer=combineReducers(allReducers);\r\n\r\n//persistConfig tell redux persist how to save and where to store data\r\n//persist reducer\r\n//the key idea of this one is to store the data on browser's application's local storage\r\n//this help so that when THE CODE IS RUNNING and THE USER REFRESH, the data is stored\r\n//when the CODE IS NOT RUNNING, IT WILL STILL STORED on the browser, wth, lmao\r\nconst rootPersistReducer =persistReducer(persistConfig, rootReducer)\r\n\r\n//issue with @babel/runtime was fixed by reinstall with yarn add @abel/runtime\r\n//instead of root reducer, now pass persist reducer\r\nexport const configureStore =()=>createStore(\r\n    rootPersistReducer,\r\n    //instead of dev tool, will use thunk with dev tool\r\n    /*window.__REDUX_DEVTOOLS_EXTENSION__&&\r\n    window.__REDUX_DEVTOOLS_EXTENSION__(),*/\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    ));","export const Display_SpaceX_API_All_Launches='Display_SpaceX_API_All_Launches';\r\nexport const Display_SpaceX_API_All_Launches_Past='Display_SpaceX_API_All_Launches_Past';\r\nexport const Display_SpaceX_API_All_Launches_Upcoming='Display_SpaceX_API_All_Launches_Upcoming';\r\nexport const Display_SpaceX_API_All_Launches_Latest='Display_SpaceX_API_All_Launches_Latest';\r\nexport const Display_SpaceX_API_All_Launches_Next='Display_SpaceX_API_All_Launches_Next';\r\nexport const Display_SpaceX_API_All_Launches_One='Display_SpaceX_API_All_Launches_One';","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {Provider } from 'react-redux';\nimport {configureStore} from './store';\nimport {persistStore} from 'redux-persist';\nimport {PersistGate} from 'redux-persist/lib/integration/react';\n\nconst indexStore=configureStore();\nconst indexPersistor=persistStore(indexStore);\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <PersistGate\n        loading={<div>Loading SpaceX data, great power and fortune will come...</div>}\n        persistor={indexPersistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}